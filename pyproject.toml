[tool.poetry]
name = "thetagang"
version = "0.1.0"
description = ""
authors = ["Major Hayden <major@mhtx.net>"]
readme = "README.md"
packages = [{include = "thetagang", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.28.1"


[tool.poetry.group.dev.dependencies]
mypy = "^0.982"
bandit = "^1.7.4"
flake8 = "^5.0.4"
isort = "^5.10.1"
pytest = "^7.2.0"
black = "^22.10.0"
pydocstyle = "^6.1.1"
responses = "^0.22.0"
pytest-xdist = "^3.0.2"
pytest-cov = "^4.0.0"
types-requests = "^2.28.11.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
py_version = 39
profile = "black"
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["src", "tests"]
extend_skip = ["setup.py"]

[tool.black]
target-version = ['py39']
preview = true
force-exclude = '''
.*/setup\.py$
'''

[tool.pytest.ini_options]
addopts = "-n auto --cov-report term-missing --cov-report html --cov-report xml:cov.xml --cov-branch --cov=thetagang"
testpaths = [
    "tests"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[tool.mypy]
files = "src"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
strict = true
ignore_missing_imports = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]

[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']
